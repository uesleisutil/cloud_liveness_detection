name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Terminate Previous Instances (Keep Target Instance)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          set -x
          INSTANCE_IDS=$(aws ec2 describe-instances --filters Name=instance-state-name,Values=running --query 'Reservations[].Instances[?InstanceId!=`i-00dfb42b896cd1295`].InstanceId' --output text)
          if [ -n "$INSTANCE_IDS" ]; then
            aws ec2 terminate-instances --instance-ids $INSTANCE_IDS --output text
            echo "Terminated instances: $INSTANCE_IDS"
          else
            echo "No running instances found."
          fi

      - name: Prepare secrets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          EC2_KEY_PEM: ${{ secrets.EC2_KEY_PEM }}
        run: |
          echo "${{ secrets.AWS_ACCESS_KEY_ID }}" > aws_access_key_id.txt
          echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}" > aws_secret_access_key.txt
          echo "${{ secrets.AWS_DEFAULT_REGION }}" > aws_default_region.txt
          echo "${{ secrets.S3_BUCKET }}" > s3_bucket.txt
          echo "${{ secrets.EC2_KEY_PEM }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Deploy to EC2
        run: |
          # Transfer the secret files to the EC2 instance
          scp -o StrictHostKeyChecking=no -i ec2_key.pem aws_access_key_id.txt ec2-user@44.207.160.25:/home/ec2-user/aws_access_key_id.txt
          scp -o StrictHostKeyChecking=no -i ec2_key.pem aws_secret_access_key.txt ec2-user@44.207.160.25:/home/ec2-user/aws_secret_access_key.txt
          scp -o StrictHostKeyChecking=no -i ec2_key.pem aws_default_region.txt ec2-user@44.207.160.25:/home/ec2-user/aws_default_region.txt
          scp -o StrictHostKeyChecking=no -i ec2_key.pem s3_bucket.txt ec2-user@44.207.160.25:/home/ec2-user/s3_bucket.txt

          # Create a local script file
          cat << 'EOF' > deploy_script.sh
          #!/bin/bash
          set -e

          # Stop any running package managers
          sudo pkill -f yum || true
          sudo pkill -f apt-get || true
          sudo pkill -9 -f yum || true
          sudo pkill -9 -f apt-get || true
          sudo killall -9 yum || true
          sudo killall -9 apt-get || true

          # Clean and update package cache
          sudo yum clean all
          sudo yum makecache

          echo "Updating packages and installing dependencies"
          timeout 5m sudo yum update -y
          timeout 5m sudo yum install -y python3 tmux python3-pip

          # Create a virtual environment
          python3 -m venv venv

          # Activate the virtual environment
          source venv/bin/activate

          # Install the required packages in the virtual en
