name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Terminate Previous Instances (Keep Target Instance)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          set -x
          INSTANCE_IDS=$(aws ec2 describe-instances --filters Name=instance-state-name,Values=running --query 'Reservations[].Instances[?InstanceId!=`i-00dfb42b896cd1295`].InstanceId' --output text)
          if [ -n "$INSTANCE_IDS" ]; then
            aws ec2 terminate-instances --instance-ids $INSTANCE_IDS --output text
            echo "Terminated instances: $INSTANCE_IDS"
          else
            echo "No running instances found."
          fi

      - name: Deploy Streamlit App
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          EC2_KEY_NAME: ${{ secrets.EC2_KEY_NAME }}
          SECURITY_GROUP_ID: ${{ secrets.SECURITY_GROUP_ID }}
          SUBNET_ID: ${{ secrets.SUBNET_ID }}
          AMI_ID: ${{ secrets.AMI_ID }}
          EC2_KEY_PEM: ${{ secrets.EC2_KEY_PEM }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          INSTANCE_ID: i-00dfb42b896cd1295
          INSTANCE_IP: 44.207.160.25
        run: |
          echo "${{ secrets.EC2_KEY_PEM }}" > ec2_key.pem
          chmod 600 ec2_key.pem

          # Create a local script file
          cat << 'EOF' > deploy_script.sh
          #!/bin/bash
          set -e

          # Kill previous tmux sessions
          tmux kill-session -t streamlit_session || true
          tmux kill-session -t fast_api || true

          # Stop any running package managers
          sudo pkill -f yum || true
          sudo pkill -f apt-get || true
          sudo pkill -9 -f yum || true
          sudo pkill -9 -f apt-get || true
          sudo killall -9 yum || true
          sudo killall -9 apt-get || true

          # Clean and update package cache
          sudo yum clean all
          sudo yum makecache

          echo "Updating packages and installing dependencies"
          timeout 5m sudo yum update -y
          timeout 5m sudo yum install -y python3 tmux python3-pip

          # Create a virtual environment
          python3 -m venv venv

          # Activate the virtual environment
          source venv/bin/activate

          # Install the required packages in the virtual environment
          pip install -r /home/ec2-user/liveness_detection/requirements.txt

          # Add Streamlit to the PATH
          export PATH=$PATH:/usr/local/bin/

          # Create .env file with secrets
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" > .env
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env
          echo "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" >> .env
          echo "S3_BUCKET=$S3_BUCKET" >> .env

          # Source the .env file
          export $(grep -v '^#' .env | xargs)

          # Replace the placeholder in streamlit_app.py with the actual public IP
          sed -i "s|http://your-ec2-public-ip:8000/upload_video|http://44.207.160.25:8000/upload_video|g" /home/ec2-user/liveness_detection/app/streamlit_app.py

          # Start Streamlit using tmux and redirect logs
          tmux new -d -s streamlit_session "source /home/ec2-user/venv/bin/activate && streamlit run /home/ec2-user/liveness_detection/app/streamlit_app.py --server.port 8080 --server.address 0.0.0.0 > /home/ec2-user/streamlit.log 2>&1"
          
          # Start FastAPI using tmux and redirect logs
          tmux new -d -s fast_api "source /home/ec2-user/venv/bin/activate && export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID && export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY && export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION && uvicorn api:app --host 0.0.0.0 --port 8000 > /home/ec2-user/fastapi.log 2>&1"
          EOF

          # Transfer the script to the EC2 instance
          scp -o StrictHostKeyChecking=no -i ec2_key.pem deploy_script.sh ec2-user@44.207.160.25:/home/ec2-user/

          # Set executable permissions for the script
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@44.207.160.25 "chmod +x /home/ec2-user/deploy_script.sh"

          # Create the liveness_detection directory on the EC2 instance with appropriate permissions
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@44.207.160.25 "sudo mkdir -p /home/ec2-user/liveness_detection && sudo chown -R ec2-user:ec2-user /home/ec2-user/liveness_detection"

          # Transfer the application code to the EC2 instance
          scp -o StrictHostKeyChecking=no -i ec2_key.pem -r * ec2-user@44.207.160.25:/home/ec2-user/liveness_detection

          # Execute the script on the EC2 instance
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@44.207.160.25 "/home/ec2-user/deploy_script.sh"
        shell: /usr/bin/bash -e {0}
